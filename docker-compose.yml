version: '3.8'

services:
  # Database Service
  database-service:
    build: ./storage-node/database
    ports:
      - "3306:3306"
    networks:
      - music-network

  # Music Service
  music-service-node:
    build: ./music-service-node
    ports:
      - "8080:8080"
    networks:
      - music-network
    depends_on:
      - database-service
      - management-user-service
      - storage-service
      - logstash 
    environment:
      - LOGSTASH_URL=http://logstash:5000
      - STORAGE_SERVICE_URL=http://storage-service:8083
      - MANAGEMENT_USER_SERVICE_URL=http://management-user-service:8084
      - DATABASE_SERVICE_URL=http://database-service:3306

  # Management User Service
  management-user-service:
    build: ./management-node/management
    ports:
      - "8084:8084"
    networks:
      - music-network
    depends_on:
      - database-service
      - logstash  

  storage-service:
    build: ./storage-node/storage
    ports:
      - "8083:8083"
    volumes:
      - storage-data:/data
    networks:
      - music-network
    depends_on:
      - logstash  
      
  # ELK Stack
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.9
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - music-network
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200 >/dev/null || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  logstash:
    build: 
      context: ./logs-node/logstash
      dockerfile: Dockerfile
    container_name: logstash
    volumes:
      - ./logs-node/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
    ports:
      - "5000:5000"
      - "5044:5044"
      - "9600:9600"
    environment:
      - "LS_JAVA_OPTS=-Xms256m -Xmx256m"
    networks:
      - music-network
    depends_on:
      elasticsearch:
        condition: service_healthy

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.9
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - music-network
    depends_on:
      elasticsearch:
        condition: service_healthy

  metricbeat:
    build:
      context: ./logs-node/metricbeat
      dockerfile: Dockerfile
    container_name: metricbeat
    user: root
    volumes:
      - ./logs-node/metricbeat/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml:ro
      - /proc:/hostfs/proc:ro
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
    environment:
      - setup.kibana.host=http://kibana:5601
      - output.elasticsearch.hosts=["http://elasticsearch:9200"]
    networks:
      - music-network
    depends_on:
      elasticsearch:
        condition: service_healthy
      kibana:
        condition: service_started

networks:
  music-network:
    driver: bridge

volumes:
  storage-data:
  elasticsearch-data:
